CREATE TABLE IF NOT EXISTS PUBLIC.genre (
	genre_id INTEGER NOT NULL AUTO_INCREMENT,
	name CHARACTER VARYING(100) NOT NULL,
	CONSTRAINT genre_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.mpa (
	mpa_id INTEGER NOT NULL AUTO_INCREMENT,
	code CHARACTER VARYING(10) NOT NULL,
	CONSTRAINT mpa_pk PRIMARY KEY (mpa_id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.films (
	film_id INTEGER NOT NULL AUTO_INCREMENT,
	name CHARACTER VARYING(100) NOT NULL,
	description CHARACTER VARYING(200) NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL,
	mpa_id INTEGER NOT NULL,
	CONSTRAINT films_pk PRIMARY KEY (film_id),
	CONSTRAINT films_mpa_fk FOREIGN KEY (mpa_id) REFERENCES PUBLIC.mpa(mpa_id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.users (
	user_id INTEGER NOT NULL AUTO_INCREMENT,
	email CHARACTER VARYING(100) NOT NULL,
	login CHARACTER VARYING(50) NOT NULL,
	name CHARACTER VARYING NOT NULL,
	birthday DATE NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.film_genres (
	film_id INTEGER NOT NULL,
	genre_id INTEGER NOT NULL,
	CONSTRAINT film_genres_films_fk FOREIGN KEY (film_id) REFERENCES PUBLIC.films (film_id),
	CONSTRAINT film_genres_genres_fk FOREIGN KEY (genre_id) REFERENCES PUBLIC.genre (genre_id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.film_likes (
	film_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	CONSTRAINT film_likes_films_fk FOREIGN KEY (film_id) REFERENCES PUBLIC.films (film_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT film_likes_users_fk FOREIGN KEY (user_id) REFERENCES PUBLIC.users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.user_friends (
	user_id INTEGER NOT NULL,
	friend_id INTEGER NOT NULL,
	confirmed BOOLEAN NOT NULL,
	CONSTRAINT user_friends_users_fk FOREIGN KEY (user_id) REFERENCES PUBLIC.users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT user_friends_users_fk_1 FOREIGN KEY (friend_id) REFERENCES PUBLIC.users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);